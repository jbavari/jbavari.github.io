<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: android | Josh Bavari's Thoughts]]></title>
  <link href="http://jbavari.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://jbavari.github.io/"/>
  <updated>2020-01-10T18:50:43-07:00</updated>
  <id>http://jbavari.github.io/</id>
  <author>
    <name><![CDATA[Josh Bavari]]></name>
    <email><![CDATA[jbavari@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Enabling Android Remote Debugging in Phonegap 2.9]]></title>
    <link href="http://jbavari.github.io/blog/2014/04/18/enabling-android-remote-debugging-in-phonegap-2-dot-9/"/>
    <updated>2014-04-18T10:13:00-06:00</updated>
    <id>http://jbavari.github.io/blog/2014/04/18/enabling-android-remote-debugging-in-phonegap-2-dot-9</id>
    <content type="html"><![CDATA[<p>Recently the Cordova (as well as Phonegap) team has introduced <a href="http://www.raymondcamden.com/index.cfm/2014/1/2/Apache-Cordova-33-and-Remote-Debugging-for-Android">the ability to remote debug Android 4.4+</a> from <a href="https://issues.apache.org/jira/browse/CB-5487">this issue</a>.</p>

<p>If you&rsquo;re like us, you have a lot of invested technology into Phonegap 2.9, and are actively making the move to Cordova 3.4. In the real world, you aren&rsquo;t always granted conveniences to move to the latest and greatest all at one time when you have released products. <a href="http://www.raymondcamden.com/index.cfm/2014/4/11/Results-of-PhoneGap-Survey">Raymond Camden did a survey</a> and apparently there are still some out there utilizing Phonegap/Cordova 2.9.</p>

<p>I wanted to show how easy it was our team to backport some of the changes needed to enable Remote Debugging in Phonegap 2.9.</p>

<p>You&rsquo;ll need to make a few changes to your MainActivity.java file. The first is an import statement, and the second is to make these changes near the bottom of the onCreate method:</p>

<p>```
// At the top near your other import statements:
import android.webkit.WebView;
// ..snip..!</p>

<p>public void onCreate(Bundle savedInstanceState) {</p>

<pre><code>// ..snip..
// Enable web debugging
if(android.os.Build.VERSION.SDK_INT &gt;= android.os.Build.VERSION_CODES.KITKAT) {
    WebView.setWebContentsDebuggingEnabled(true);
}
</code></pre>

<p>}
```</p>

<p>One thing to note, this only works for Android versions 4.4 or greater! If you aren&rsquo;t using Android API 19 or greater, you&rsquo;ll have to keep using Weinre.</p>

<p>Now just start your app, enable USB debugging, open Chrome, go to about:inspect, and enjoy your remote debugging in Phonegap/Cordova 2.9! Cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to be a good imitator in PhoneGap/Cordova]]></title>
    <link href="http://jbavari.github.io/blog/2014/03/11/how-to-be-a-good-imitator-in-phonegap-slash-cordova/"/>
    <updated>2014-03-11T01:02:00-06:00</updated>
    <id>http://jbavari.github.io/blog/2014/03/11/how-to-be-a-good-imitator-in-phonegap-slash-cordova</id>
    <content type="html"><![CDATA[<p>If you found your way here, then you&rsquo;re probably seeking knowlege about Phonegap/Cordova. I want to first remind you what the purpose of the PhoneGap / Cordova project is:</p>

<blockquote><p><a href="http://phonegap.com/2012/05/09/phonegap-beliefs-goals-and-philosophy/">The ultimate purpose of PhoneGap is to cease to exist.</a></p></blockquote>

<p>What this means is &ndash; you should really start getting ready to make Native-like apps regardless of what technology is used.</p>

<p>How can we give native apps a better feel from PhoneGap / Cordova? Or stated another way, what are some tricks we can use to make the application feel more native?</p>

<p>The answer then, is to be a better imitator, you must first understand what you are imitating.</p>

<h2>The chameleons change color to their surroundings</h2>

<p>Simply stated &ndash; you adapt to what your surroundings are.</p>

<p>Our surroundings for PhoneGap / Cordova are quite wide:</p>

<ul>
<li>iOS</li>
<li>Android</li>
<li>Windows Phone</li>
<li>BlackBerry</li>
<li>Firefox OS</li>
</ul>


<p>That is a lot to adapt to. It may take a little time to familiarize yourself with each platform. If you do though, your users will thank you.</p>

<h2>Some suggestions</h2>

<ul>
<li>Put navigation items near the top in Android, for iOS put them near the bottom. Users are used to having their navigation in the same place.</li>
<li>In Android / Windows Phone &ndash; mind the Back button! Users use their phones natively, and if you try to change this, they will hate your app.</li>
<li>Dont use the same button styles for each platform! Buttons on iOS do not look like buttons on Android &ndash; if you try this though, your users will notice and find it odd. <a href="http://goratchet.com/components/">See these great examples from Ratchet.js (look for the Base/iOS/Android buttons near the top)</a></li>
<li>Use Native-like loading animations. iOS generally has a small circle &ndash; if you try using this instead of your own custom loading icon, users will most likely blame their phone over your app. <a href="http://mercury.io/blog/the-psychology-of-waiting-loading-animations-and-facebook">See this study by Facebook for loading animations</a></li>
<li>Test on actual devices. You cant get a native feel from clicking on a simulator.</li>
</ul>


<p>References:</p>

<p><a href="http://www.tricedesigns.com/2013/03/11/performance-ux-considerations-for-successful-phonegap-apps/">Performance UX Considerations for successful PhoneGap apps</a></p>

<p><a href="http://www.mikedellanoce.com/2012/09/10-tips-for-getting-that-native-ios.html">Tips for getting that native feel</a></p>
]]></content>
  </entry>
  
</feed>
